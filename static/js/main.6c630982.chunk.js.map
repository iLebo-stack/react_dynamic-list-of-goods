{"version":3,"sources":["api/goods.ts","Components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","goods","sort","goodA","goodB","name","localeCompare","slice","getRedGoods","filter","color","GoodList","React","memo","className","map","id","style","App","useState","setGoods","getGoods","useCallback","fetchFunction","type","onClick","goodsAPI","ReactDOM","render","document","getElementById"],"mappings":"mMAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAI,GAAK,OACTA,EAAMC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,KAAKC,cAAcF,EAAMC,SACzDE,MAAM,EAAG,OAGLC,EAAc,WACzB,OAAOb,IAASE,MAAK,SAAAI,GAAK,OAAIA,EAAMQ,QAAO,kBAAyB,QAAzB,EAAGC,a,cCVnCC,EAA4BC,IAAMC,MAC7C,gBAAGZ,EAAH,EAAGA,MAAH,OACE,oBAAIa,UAAU,QAAd,SACGb,EAAMc,KAAI,gBAAGV,EAAH,EAAGA,KAAMW,EAAT,EAASA,GAAIN,EAAb,EAAaA,MAAb,OACT,oBAEEO,MAAO,CAAEP,SAFX,SAIGL,GAHIW,WC4CAE,G,MA/CO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAOlB,EAAP,KAAcmB,EAAd,KAEMC,EAAWC,uBACf,SAACC,GAAD,OAAkCA,IAAgB1B,KAAKuB,KACvD,CAACnB,IAGH,OACE,sBAAKa,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,mCAEA,wBACEU,KAAK,SACLC,QAAS,WACPJ,EAASK,IAEXZ,UAAU,SALZ,iBAUA,wBACEU,KAAK,SACLC,QAAS,WACPJ,EAASK,IAEXZ,UAAU,SALZ,eAUA,wBACEU,KAAK,SACLC,QAAS,WACPJ,EAASK,IAEXZ,UAAU,SALZ,iBAUA,cAACH,EAAD,CAAUV,MAAOA,SC/CvB0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.6c630982.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => (\n      goods.sort((goodA, goodB) => goodA.name.localeCompare(goodB.name))\n        .slice(0, 5)));\n};\n\nexport const getRedGoods = () => {\n  return getAll().then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","import React from 'react';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul className=\"goods\">\n      {goods.map(({ name, id, color }) => (\n        <li\n          key={id}\n          style={{ color }}\n        >\n          {name}\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import React, { useCallback, useState } from 'react';\nimport * as goodsAPI from './api/goods';\nimport './App.scss';\nimport { GoodList } from './Components/GoodList/GoodList';\nimport 'bulma';\n\ntype FetchFunction = () => Promise<Good[]>;\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getGoods = useCallback(\n    (fetchFunction: FetchFunction) => fetchFunction().then(setGoods),\n    [goods],\n  );\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          getGoods(goodsAPI.getAll);\n        }}\n        className=\"button\"\n      >\n        all\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          getGoods(goodsAPI.get5First);\n        }}\n        className=\"button\"\n      >\n        5\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          getGoods(goodsAPI.getRedGoods);\n        }}\n        className=\"button\"\n      >\n        red\n      </button>\n\n      <GoodList goods={goods} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}